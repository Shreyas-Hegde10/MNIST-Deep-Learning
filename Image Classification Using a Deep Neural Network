{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[],"dockerImageVersionId":30762,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport torch\nimport torchvision\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport torch.nn as nn\nimport torch.nn.functional as F\nfrom torchvision.datasets import MNIST\nfrom torchvision.transforms import ToTensor\nfrom torchvision.utils import make_grid\nfrom torch.utils.data.dataloader import DataLoader\nfrom torch.utils.data import random_split \nimport optuna\n%matplotlib inline\n\n# Use a white background for matplotlib figures\nmatplotlib.rcParams['figure.facecolor'] = '#ffffff'\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-01T03:04:05.504851Z","iopub.execute_input":"2024-09-01T03:04:05.505323Z","iopub.status.idle":"2024-09-01T03:04:05.516779Z","shell.execute_reply.started":"2024-09-01T03:04:05.505283Z","shell.execute_reply":"2024-09-01T03:04:05.515829Z"},"trusted":true},"execution_count":87,"outputs":[]},{"cell_type":"markdown","source":"Loading Dataset","metadata":{}},{"cell_type":"code","source":"dataset = MNIST(root='data/', download=True, transform=ToTensor())","metadata":{"execution":{"iopub.status.busy":"2024-09-01T00:03:31.915981Z","iopub.execute_input":"2024-09-01T00:03:31.916522Z","iopub.status.idle":"2024-09-01T00:03:34.980337Z","shell.execute_reply.started":"2024-09-01T00:03:31.916478Z","shell.execute_reply":"2024-09-01T00:03:34.979382Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"Downloading http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz\nFailed to download (trying next):\nHTTP Error 403: Forbidden\n\nDownloading https://ossci-datasets.s3.amazonaws.com/mnist/train-images-idx3-ubyte.gz\nDownloading https://ossci-datasets.s3.amazonaws.com/mnist/train-images-idx3-ubyte.gz to data/MNIST/raw/train-images-idx3-ubyte.gz\n","output_type":"stream"},{"name":"stderr","text":"100%|██████████| 9912422/9912422 [00:00<00:00, 33099915.25it/s]\n","output_type":"stream"},{"name":"stdout","text":"Extracting data/MNIST/raw/train-images-idx3-ubyte.gz to data/MNIST/raw\n\nDownloading http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz\nFailed to download (trying next):\nHTTP Error 403: Forbidden\n\nDownloading https://ossci-datasets.s3.amazonaws.com/mnist/train-labels-idx1-ubyte.gz\nDownloading https://ossci-datasets.s3.amazonaws.com/mnist/train-labels-idx1-ubyte.gz to data/MNIST/raw/train-labels-idx1-ubyte.gz\n","output_type":"stream"},{"name":"stderr","text":"100%|██████████| 28881/28881 [00:00<00:00, 946550.09it/s]\n","output_type":"stream"},{"name":"stdout","text":"Extracting data/MNIST/raw/train-labels-idx1-ubyte.gz to data/MNIST/raw\n\nDownloading http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz\nFailed to download (trying next):\nHTTP Error 403: Forbidden\n\nDownloading https://ossci-datasets.s3.amazonaws.com/mnist/t10k-images-idx3-ubyte.gz\nDownloading https://ossci-datasets.s3.amazonaws.com/mnist/t10k-images-idx3-ubyte.gz to data/MNIST/raw/t10k-images-idx3-ubyte.gz\n","output_type":"stream"},{"name":"stderr","text":"100%|██████████| 1648877/1648877 [00:00<00:00, 9099234.52it/s]\n","output_type":"stream"},{"name":"stdout","text":"Extracting data/MNIST/raw/t10k-images-idx3-ubyte.gz to data/MNIST/raw\n\nDownloading http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz\nFailed to download (trying next):\nHTTP Error 403: Forbidden\n\nDownloading https://ossci-datasets.s3.amazonaws.com/mnist/t10k-labels-idx1-ubyte.gz\nDownloading https://ossci-datasets.s3.amazonaws.com/mnist/t10k-labels-idx1-ubyte.gz to data/MNIST/raw/t10k-labels-idx1-ubyte.gz\n","output_type":"stream"},{"name":"stderr","text":"100%|██████████| 4542/4542 [00:00<00:00, 2317864.55it/s]","output_type":"stream"},{"name":"stdout","text":"Extracting data/MNIST/raw/t10k-labels-idx1-ubyte.gz to data/MNIST/raw\n\n","output_type":"stream"},{"name":"stderr","text":"\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Viewing Samples","metadata":{}},{"cell_type":"code","source":"image, label = dataset[0]\nprint('image.shape:', image.shape)\nplt.imshow(image.permute(1, 2, 0), cmap='gray')\nprint('Label:', label)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T00:03:34.982123Z","iopub.execute_input":"2024-09-01T00:03:34.982525Z","iopub.status.idle":"2024-09-01T00:03:35.285024Z","shell.execute_reply.started":"2024-09-01T00:03:34.982481Z","shell.execute_reply":"2024-09-01T00:03:35.283869Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"image.shape: torch.Size([1, 28, 28])\nLabel: 5\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"Creating Training and Validation Steps","metadata":{}},{"cell_type":"code","source":"val_size = 10000 \ntest_size = 5000\ntrain_size = len(dataset) - val_size - test_size\n\ntrain_ds, val_ds, test_ds = random_split(dataset, [train_size, val_size, test_size])\nprint(len(train_ds),len(val_ds), len(test_ds)) ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T04:29:07.069375Z","iopub.execute_input":"2024-09-01T04:29:07.069799Z","iopub.status.idle":"2024-09-01T04:29:07.083125Z","shell.execute_reply.started":"2024-09-01T04:29:07.069761Z","shell.execute_reply":"2024-09-01T04:29:07.082137Z"},"trusted":true},"execution_count":113,"outputs":[{"name":"stdout","text":"45000 10000 5000\n","output_type":"stream"}]},{"cell_type":"code","source":"batch_size = 128 \ntrain_loader = DataLoader(train_ds, batch_size, shuffle=True, num_workers=4, pin_memory=True) \nval_loader = DataLoader(val_ds, batch_size*2, num_workers=4, pin_memory=True) \ntest_loader = DataLoader(test_ds, batch_size*2, num_workers=4, pin_memory=True)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T04:29:34.399022Z","iopub.execute_input":"2024-09-01T04:29:34.399443Z","iopub.status.idle":"2024-09-01T04:29:34.405073Z","shell.execute_reply.started":"2024-09-01T04:29:34.399406Z","shell.execute_reply":"2024-09-01T04:29:34.404120Z"},"trusted":true},"execution_count":114,"outputs":[]},{"cell_type":"code","source":"# Visualizing some samples from the training set \nfor images,_ in train_loader: \n    print('images.shape: ', images.shape)\n    print('grid.shape: ', make_grid(images, nrow=16).shape) \n    plt.axis('off')\n    plt.imshow(make_grid(images,nrow=16).permute(1,2,0)) \n    break\n    ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T00:03:35.317481Z","iopub.execute_input":"2024-09-01T00:03:35.317923Z","iopub.status.idle":"2024-09-01T00:03:36.022613Z","shell.execute_reply.started":"2024-09-01T00:03:35.317881Z","shell.execute_reply":"2024-09-01T00:03:36.021432Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"images.shape:  torch.Size([128, 1, 28, 28])\ngrid.shape:  torch.Size([3, 242, 482])\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"#Flattening images into vectors of size 784\nfor images,labels in train_loader: \n    print('images.shape: ', images.shape)\n    inputs = images.reshape(-1,784)\n    print('inputs.shape: ', inputs.shape)\n    break","metadata":{"execution":{"iopub.status.busy":"2024-09-01T00:03:36.024517Z","iopub.execute_input":"2024-09-01T00:03:36.025713Z","iopub.status.idle":"2024-09-01T00:03:36.232442Z","shell.execute_reply.started":"2024-09-01T00:03:36.025655Z","shell.execute_reply":"2024-09-01T00:03:36.230287Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"images.shape:  torch.Size([128, 1, 28, 28])\ninputs.shape:  torch.Size([128, 784])\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Creating A Hidden Layer","metadata":{}},{"cell_type":"code","source":"input_size = inputs.shape[-1]\nhidden_size = 32 \nlayer1 = nn.Linear(input_size,hidden_size)# Input: input_size, Output: hidden_size","metadata":{"execution":{"iopub.status.busy":"2024-09-01T00:03:36.234149Z","iopub.execute_input":"2024-09-01T00:03:36.234503Z","iopub.status.idle":"2024-09-01T00:03:36.243652Z","shell.execute_reply.started":"2024-09-01T00:03:36.234463Z","shell.execute_reply":"2024-09-01T00:03:36.241728Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"layer1_outputs = layer1(inputs)\nprint('layer1_outputs.shape: ', layer1_outputs.shape)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T00:03:36.245542Z","iopub.execute_input":"2024-09-01T00:03:36.246094Z","iopub.status.idle":"2024-09-01T00:03:36.293203Z","shell.execute_reply.started":"2024-09-01T00:03:36.246037Z","shell.execute_reply":"2024-09-01T00:03:36.292212Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"layer1_outputs.shape:  torch.Size([128, 32])\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Activation function ","metadata":{}},{"cell_type":"code","source":"relu_outputs = F.relu(layer1_outputs)\nprint('min(layer1_outputs):', torch.min(layer1_outputs).item())\nprint('min(relu_outputs):', torch.min(relu_outputs).item()) ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T04:29:44.599800Z","iopub.execute_input":"2024-09-01T04:29:44.600214Z","iopub.status.idle":"2024-09-01T04:29:44.606675Z","shell.execute_reply.started":"2024-09-01T04:29:44.600176Z","shell.execute_reply":"2024-09-01T04:29:44.605706Z"},"trusted":true},"execution_count":115,"outputs":[{"name":"stdout","text":"min(layer1_outputs): -0.7868513464927673\nmin(relu_outputs): 0.0\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Output Layer","metadata":{}},{"cell_type":"code","source":"output_size = 10 \nlayer2 = nn.Linear(hidden_size, output_size) # Input: hidden_size, Output: output_size\nlayer2_outputs = layer2(relu_outputs)\nprint(layer2_outputs.shape)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T00:19:23.324096Z","iopub.execute_input":"2024-09-01T00:19:23.324842Z","iopub.status.idle":"2024-09-01T00:19:23.337379Z","shell.execute_reply.started":"2024-09-01T00:19:23.324777Z","shell.execute_reply":"2024-09-01T00:19:23.336221Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"torch.Size([128, 10])\n","output_type":"stream"}]},{"cell_type":"code","source":"# Computing loss \nF.cross_entropy(layer2_outputs, labels)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T00:20:18.811562Z","iopub.execute_input":"2024-09-01T00:20:18.811949Z","iopub.status.idle":"2024-09-01T00:20:18.841436Z","shell.execute_reply.started":"2024-09-01T00:20:18.811912Z","shell.execute_reply":"2024-09-01T00:20:18.840507Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"tensor(2.3148, grad_fn=<NllLossBackward0>)"},"metadata":{}}]},{"cell_type":"markdown","source":"Creating Model ","metadata":{}},{"cell_type":"code","source":"class MnistModel(nn.Module):\n    # Class constructor \n    def __init__(self, in_size, hidden_size, out_size):\n        super().__init__()\n        # hidden layer\n        self.linear1 = nn.Linear(in_size, hidden_size)\n        # output layer\n        self.linear2 = nn.Linear(hidden_size, out_size)\n    \n    # Forward pass method    \n    def forward(self, xb):\n        # Flatten the image tensors\n        xb = xb.view(xb.size(0), -1)\n        # Get intermediate outputs using hidden layer\n        out = self.linear1(xb)\n        # Apply activation function\n        out = F.relu(out)\n        # Get predictions using output layer\n        out = self.linear2(out)\n        return out\n    \n    # Training method\n    def training_step(self, batch):\n        images, labels = batch \n        out = self(images)                  # Generate predictions\n        loss = F.cross_entropy(out, labels) # Calculate loss\n        return loss\n    \n    # Validation loss and accuracy method\n    def validation_step(self, batch):\n        images, labels = batch \n        out = self(images)                    # Generate predictions\n        loss = F.cross_entropy(out, labels)   # Calculate loss\n        acc = accuracy(out, labels)           # Calculate accuracy\n        return {'val_loss': loss, 'val_acc': acc}\n    \n    # Method used for combining batch losses & accuracies into epoch losses/accuracies\n    def validation_epoch_end(self, outputs):\n        batch_losses = [x['val_loss'] for x in outputs]\n        epoch_loss = torch.stack(batch_losses).mean()   # Combine losses\n        batch_accs = [x['val_acc'] for x in outputs]\n        epoch_acc = torch.stack(batch_accs).mean()      # Combine accuracies\n        return {'val_loss': epoch_loss.item(), 'val_acc': epoch_acc.item()}\n    \n    # Method used for format validation losses and accuracies\n    def epoch_end(self, epoch, result):\n        print(\"Epoch [{}], val_loss: {:.4f}, val_acc: {:.4f}\".format(epoch, result['val_loss'], result['val_acc']))\n    \n    # Test loss and accuracy method\n    def test_step(self, batch):\n        images, labels = batch\n        out = self(images)                    # Generate predictions\n        loss = F.cross_entropy(out, labels)   # Calculate loss\n        acc = accuracy(out, labels)           # Calculate accuracy\n        return {'test_loss': loss, 'test_acc': acc}\n    \n    # Method used for combining batch losses & accuracies into epoch losses/accuracies for the test set\n    def test_epoch_end(self, outputs):\n        batch_losses = [x['test_loss'] for x in outputs]\n        epoch_loss = torch.stack(batch_losses).mean()   # Combine losses\n        batch_accs = [x['test_acc'] for x in outputs]\n        epoch_acc = torch.stack(batch_accs).mean()      # Combine accuracies\n        return {'test_loss': epoch_loss.item(), 'test_acc': epoch_acc.item()}\n    \n    # Method used for format test losses and accuracies\n    def epoch_end_test(self, epoch, result):\n        print(\"Epoch [{}], test_loss: {:.4f}, test_acc: {:.4f}\".format(epoch, result['test_loss'], result['test_acc']))","metadata":{"execution":{"iopub.status.busy":"2024-09-01T05:59:26.586310Z","iopub.execute_input":"2024-09-01T05:59:26.586695Z","iopub.status.idle":"2024-09-01T05:59:26.603200Z","shell.execute_reply.started":"2024-09-01T05:59:26.586659Z","shell.execute_reply":"2024-09-01T05:59:26.602277Z"},"trusted":true},"execution_count":178,"outputs":[]},{"cell_type":"code","source":"# Accuracy function \ndef accuracy(outputs, labels): \n    _, preds = torch.max(outputs, dim=1)\n    return torch.tensor(torch.sum(preds == labels)/len(preds))\n","metadata":{"execution":{"iopub.status.busy":"2024-09-01T05:57:54.724726Z","iopub.execute_input":"2024-09-01T05:57:54.725137Z","iopub.status.idle":"2024-09-01T05:57:54.730333Z","shell.execute_reply.started":"2024-09-01T05:57:54.725098Z","shell.execute_reply":"2024-09-01T05:57:54.729315Z"},"trusted":true},"execution_count":173,"outputs":[]},{"cell_type":"code","source":"# Creating a model \ninput_size = 784 \nhidden_size = 32 \nnum_classes = 10 ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T04:31:12.923259Z","iopub.execute_input":"2024-09-01T04:31:12.923638Z","iopub.status.idle":"2024-09-01T04:31:12.928027Z","shell.execute_reply.started":"2024-09-01T04:31:12.923602Z","shell.execute_reply":"2024-09-01T04:31:12.927105Z"},"trusted":true},"execution_count":118,"outputs":[]},{"cell_type":"code","source":"model = MnistModel(input_size, hidden_size,num_classes)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T04:31:14.813161Z","iopub.execute_input":"2024-09-01T04:31:14.814030Z","iopub.status.idle":"2024-09-01T04:31:14.819249Z","shell.execute_reply.started":"2024-09-01T04:31:14.813990Z","shell.execute_reply":"2024-09-01T04:31:14.818275Z"},"trusted":true},"execution_count":119,"outputs":[]},{"cell_type":"code","source":"for images, labels in train_loader:\n    outputs = model(images)\n    loss = F.cross_entropy(outputs, labels)\n    print('Loss:', loss.item())\n    break\n\nprint('outputs.shape : ', outputs.shape)\nprint('Sample outputs :\\n', outputs[:2].data)\n","metadata":{"execution":{"iopub.status.busy":"2024-09-01T04:31:17.044504Z","iopub.execute_input":"2024-09-01T04:31:17.044890Z","iopub.status.idle":"2024-09-01T04:31:17.279923Z","shell.execute_reply.started":"2024-09-01T04:31:17.044852Z","shell.execute_reply":"2024-09-01T04:31:17.278543Z"},"trusted":true},"execution_count":120,"outputs":[{"name":"stdout","text":"Loss: 2.289964437484741\noutputs.shape :  torch.Size([128, 10])\nSample outputs :\n tensor([[-0.1787, -0.0253, -0.1353,  0.2549,  0.0740, -0.0385,  0.1705,  0.1996,\n          0.1217,  0.0518],\n        [-0.1651, -0.0371, -0.1845,  0.1141,  0.0436, -0.0614,  0.0595,  0.0817,\n          0.0617,  0.0481]])\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Using a GPU","metadata":{}},{"cell_type":"code","source":"# Checking if NVIDIA CUDA drivers are installed and if GPU is available\ntorch.cuda.is_available() # True\n\n# Function to check if GPUs are available\ndef get_default_device():\n    \"\"\"Pick GPU if available, else CPU\"\"\"\n    if torch.cuda.is_available():\n        return torch.device('cuda')\n    else:\n        return torch.device('cpu') \ndevice = get_default_device() \nprint(device)\n    ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T04:31:21.818708Z","iopub.execute_input":"2024-09-01T04:31:21.819176Z","iopub.status.idle":"2024-09-01T04:31:21.826542Z","shell.execute_reply.started":"2024-09-01T04:31:21.819130Z","shell.execute_reply":"2024-09-01T04:31:21.825473Z"},"trusted":true},"execution_count":121,"outputs":[{"name":"stdout","text":"cuda\n","output_type":"stream"}]},{"cell_type":"code","source":"# Definining a function that can move data and model to a chosen device \ndef to_device(data,device): \n    if isinstance(data, (list,tuple)):\n        return [to_device(x, device) for x in data]\n    return data.to(device, non_blocking=True)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T04:31:23.995279Z","iopub.execute_input":"2024-09-01T04:31:23.995915Z","iopub.status.idle":"2024-09-01T04:31:24.001094Z","shell.execute_reply.started":"2024-09-01T04:31:23.995872Z","shell.execute_reply":"2024-09-01T04:31:24.000046Z"},"trusted":true},"execution_count":122,"outputs":[]},{"cell_type":"code","source":"# Creating a class to wrap existing data loaders and move data batches to selected device \nclass DeviceDataLoader(): \n    # Class constructor \n    def __init__(self, data_loader, device): \n        self.data_loader = data_loader \n        self.device = device\n    \n    # Method used to yield a batch of data after moving to a device \n    def __iter__(self): \n        for b in self.data_loader: \n            yield to_device(b, self.device) \n    \n    # Creating a method to find number of batches \n    def __len__(self): \n        return len(self.data_loader)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T01:55:14.962375Z","iopub.execute_input":"2024-09-01T01:55:14.962795Z","iopub.status.idle":"2024-09-01T01:55:14.969078Z","shell.execute_reply.started":"2024-09-01T01:55:14.962739Z","shell.execute_reply":"2024-09-01T01:55:14.968114Z"},"trusted":true},"execution_count":49,"outputs":[]},{"cell_type":"code","source":"# Wrapping data loaders using previous class \ntrain_loader = DeviceDataLoader(train_loader, device)\nval_loader = DeviceDataLoader(val_loader, device)\ntest_loader = DeviceDataLoader(test_loader, device)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T04:31:46.347428Z","iopub.execute_input":"2024-09-01T04:31:46.347838Z","iopub.status.idle":"2024-09-01T04:31:46.352916Z","shell.execute_reply.started":"2024-09-01T04:31:46.347797Z","shell.execute_reply":"2024-09-01T04:31:46.351821Z"},"trusted":true},"execution_count":123,"outputs":[]},{"cell_type":"code","source":"# Checking if tensors have moved to the GPU device \nfor xb, yb in val_loader:\n    print('xb.device:', xb.device)\n    print('yb:', yb)\n    break \n\n# Successfully moved to GPU device ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T04:31:59.143515Z","iopub.execute_input":"2024-09-01T04:31:59.144425Z","iopub.status.idle":"2024-09-01T04:31:59.418157Z","shell.execute_reply.started":"2024-09-01T04:31:59.144381Z","shell.execute_reply":"2024-09-01T04:31:59.416794Z"},"trusted":true},"execution_count":124,"outputs":[{"name":"stdout","text":"xb.device: cuda:0\nyb: tensor([8, 2, 1, 6, 5, 3, 9, 6, 8, 9, 9, 1, 3, 8, 2, 9, 7, 9, 2, 9, 2, 3, 8, 1,\n        0, 5, 1, 3, 7, 2, 7, 9, 5, 9, 5, 2, 5, 6, 3, 5, 2, 7, 3, 8, 6, 7, 7, 5,\n        0, 7, 3, 9, 2, 2, 7, 8, 5, 4, 0, 3, 3, 2, 7, 4, 4, 7, 1, 2, 2, 3, 5, 2,\n        3, 6, 2, 0, 2, 5, 8, 2, 6, 1, 1, 0, 1, 1, 7, 3, 7, 7, 4, 0, 4, 0, 0, 1,\n        3, 0, 4, 4, 2, 9, 8, 7, 9, 7, 8, 8, 9, 9, 7, 5, 4, 9, 7, 1, 8, 5, 9, 0,\n        2, 5, 5, 8, 6, 3, 4, 8, 1, 8, 5, 4, 6, 0, 8, 8, 4, 8, 1, 8, 0, 2, 9, 8,\n        6, 3, 4, 1, 4, 8, 8, 7, 8, 2, 4, 4, 3, 1, 4, 5, 3, 4, 7, 4, 6, 8, 6, 1,\n        2, 4, 3, 4, 1, 2, 4, 5, 2, 6, 7, 9, 1, 5, 7, 0, 5, 1, 5, 9, 9, 8, 7, 5,\n        4, 8, 8, 7, 1, 6, 2, 6, 3, 3, 7, 3, 5, 5, 2, 1, 7, 2, 1, 3, 8, 2, 0, 1,\n        4, 2, 3, 0, 6, 6, 2, 1, 7, 9, 9, 1, 7, 8, 1, 5, 1, 7, 7, 3, 1, 5, 7, 2,\n        8, 7, 5, 3, 9, 3, 8, 1, 9, 3, 4, 6, 9, 1, 9, 6], device='cuda:0')\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Training the Model ","metadata":{}},{"cell_type":"code","source":"def evaluate(model, val_loader):\n    \"\"\"Evaluate the model's performance on the validation set\"\"\"\n    outputs = [model.validation_step(batch) for batch in val_loader]\n    return model.validation_epoch_end(outputs)\n\ndef fit(epochs, lr, model, train_loader, val_loader,opt_func=torch.optim.SGD):\n    \"\"\"Train the model using gradient descent\"\"\"\n    history = []\n    optimizer = opt_func(model.parameters(), lr)\n    for epoch in range(epochs):\n        # Training Phase \n        for batch in train_loader:\n            loss = model.training_step(batch)\n            loss.backward()\n            optimizer.step()\n            optimizer.zero_grad()\n        # Validation phase\n        result = evaluate(model, val_loader)\n        model.epoch_end(epoch, result)\n        history.append(result)\n    return history\n            ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T04:43:15.272643Z","iopub.execute_input":"2024-09-01T04:43:15.273419Z","iopub.status.idle":"2024-09-01T04:43:15.280849Z","shell.execute_reply.started":"2024-09-01T04:43:15.273377Z","shell.execute_reply":"2024-09-01T04:43:15.279796Z"},"trusted":true},"execution_count":126,"outputs":[]},{"cell_type":"code","source":"# Model (on GPU)\nmodel_gpu = MnistModel(input_size, hidden_size=hidden_size, out_size=num_classes)\nto_device(model_gpu, device)","metadata":{"trusted":true},"execution_count":127,"outputs":[{"execution_count":127,"output_type":"execute_result","data":{"text/plain":"MnistModel(\n  (linear1): Linear(in_features=784, out_features=32, bias=True)\n  (linear2): Linear(in_features=32, out_features=10, bias=True)\n)"},"metadata":{}}]},{"cell_type":"code","source":"history1 = fit(5, 0.5, model_gpu, train_loader, val_loader) ","metadata":{"trusted":true},"execution_count":128,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n","output_type":"stream"},{"name":"stdout","text":"Epoch [0], val_loss: 0.2442, val_acc: 0.9287\nEpoch [1], val_loss: 0.1909, val_acc: 0.9407\nEpoch [2], val_loss: 0.1550, val_acc: 0.9538\nEpoch [3], val_loss: 0.1551, val_acc: 0.9553\nEpoch [4], val_loss: 0.1331, val_acc: 0.9613\n","output_type":"stream"}]},{"cell_type":"code","source":"history2 = fit(5, 0.5, model_gpu, train_loader, val_loader)","metadata":{"trusted":true},"execution_count":129,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n","output_type":"stream"},{"name":"stdout","text":"Epoch [0], val_loss: 0.1553, val_acc: 0.9577\nEpoch [1], val_loss: 0.1203, val_acc: 0.9651\nEpoch [2], val_loss: 0.1191, val_acc: 0.9659\nEpoch [3], val_loss: 0.1227, val_acc: 0.9649\nEpoch [4], val_loss: 0.1422, val_acc: 0.9602\n","output_type":"stream"}]},{"cell_type":"code","source":"history3 = fit(5, 0.5, model_gpu, train_loader, val_loader)","metadata":{"trusted":true},"execution_count":130,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n","output_type":"stream"},{"name":"stdout","text":"Epoch [0], val_loss: 0.1328, val_acc: 0.9654\nEpoch [1], val_loss: 0.1348, val_acc: 0.9632\nEpoch [2], val_loss: 0.1182, val_acc: 0.9671\nEpoch [3], val_loss: 0.1198, val_acc: 0.9666\nEpoch [4], val_loss: 0.1210, val_acc: 0.9651\n","output_type":"stream"}]},{"cell_type":"code","source":"history4 = fit(5, 0.1, model_gpu, train_loader, val_loader)","metadata":{"trusted":true},"execution_count":131,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n","output_type":"stream"},{"name":"stdout","text":"Epoch [0], val_loss: 0.1075, val_acc: 0.9702\nEpoch [1], val_loss: 0.1076, val_acc: 0.9707\nEpoch [2], val_loss: 0.1087, val_acc: 0.9714\nEpoch [3], val_loss: 0.1082, val_acc: 0.9702\nEpoch [4], val_loss: 0.1080, val_acc: 0.9706\n","output_type":"stream"}]},{"cell_type":"code","source":"history5 = fit(5, 0.1, model_gpu, train_loader, val_loader)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T04:45:00.458198Z","iopub.execute_input":"2024-09-01T04:45:00.458630Z","iopub.status.idle":"2024-09-01T04:45:18.468625Z","shell.execute_reply.started":"2024-09-01T04:45:00.458587Z","shell.execute_reply":"2024-09-01T04:45:18.467332Z"},"trusted":true},"execution_count":132,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n","output_type":"stream"},{"name":"stdout","text":"Epoch [0], val_loss: 0.1095, val_acc: 0.9705\nEpoch [1], val_loss: 0.1093, val_acc: 0.9702\nEpoch [2], val_loss: 0.1096, val_acc: 0.9707\nEpoch [3], val_loss: 0.1108, val_acc: 0.9707\nEpoch [4], val_loss: 0.1106, val_acc: 0.9708\n","output_type":"stream"}]},{"cell_type":"code","source":"history = history1+history2+history3+history4\naccuracies = [result['val_acc'] for result in history]\nplt.plot(accuracies, '-x')\nplt.xlabel('epoch')\nplt.ylabel('accuracy')\nplt.title('Accuracy Compared To # of Epochs')","metadata":{"trusted":true},"execution_count":133,"outputs":[{"execution_count":133,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 1.0, 'Accuracy Compared To # of Epochs')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"Hyperparameter Optimization ","metadata":{}},{"cell_type":"code","source":"#Defining objective function\ndef objective(trial):\n\n    # Hyperparameters to tune\n    learning_rate = trial.suggest_loguniform('lr', 1e-2, 1e-0)\n\n    # Creating the model\n    model = MnistModel(input_size, hidden_size=hidden_size, out_size=num_classes)\n    to_device(model, device)\n\n    # Optimizer\n    optimizer = torch.optim.SGD(model.parameters(), lr=learning_rate)\n\n    # Train and val loaders\n    train_loader = DataLoader(train_ds, batch_size=128, shuffle=True)\n    val_loader = DataLoader(val_ds, batch_size=256)\n    train_loader = DeviceDataLoader(train_loader, device)\n    val_loader = DeviceDataLoader(val_loader, device)\n\n    \n    num_epochs = 5\n    for epoch in range(num_epochs):\n        for batch in train_loader:\n\n             # Training Loop\n            loss = model.training_step(batch)\n            loss.backward()\n            optimizer.step()\n            optimizer.zero_grad()\n\n        # Validation Stage\n        result = evaluate(model, val_loader)\n\n    return result['val_acc']\n    \n    ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T04:45:49.739410Z","iopub.execute_input":"2024-09-01T04:45:49.740141Z","iopub.status.idle":"2024-09-01T04:45:49.748527Z","shell.execute_reply.started":"2024-09-01T04:45:49.740101Z","shell.execute_reply":"2024-09-01T04:45:49.747442Z"},"trusted":true},"execution_count":134,"outputs":[]},{"cell_type":"code","source":"# Create a study object\nstudy = optuna.create_study(direction='maximize')\nstudy.optimize(objective, n_trials=10)  # Number of trials\n\n# Get the best trial\nbest_trial = study.best_trial\n\n# Print the best hyperparameters, best accuracy, and trial number\nprint(f\"Best hyperparameters: {best_trial.params}\")\nprint(f\"Best test accuracy: {best_trial.value:.4f}\")\nprint(f\"Trial number with best test accuracy: {best_trial.number}\")","metadata":{"execution":{"iopub.status.busy":"2024-09-01T04:54:52.952813Z","iopub.execute_input":"2024-09-01T04:54:52.953593Z","iopub.status.idle":"2024-09-01T05:00:01.614131Z","shell.execute_reply.started":"2024-09-01T04:54:52.953548Z","shell.execute_reply":"2024-09-01T05:00:01.613183Z"},"trusted":true},"execution_count":136,"outputs":[{"name":"stderr","text":"[I 2024-09-01 04:54:52,956] A new study created in memory with name: no-name-39983bae-7389-4ed5-9b10-91074eec1a74\n/tmp/ipykernel_36/4016277099.py:5: FutureWarning: suggest_loguniform has been deprecated in v3.0.0. This feature will be removed in v6.0.0. See https://github.com/optuna/optuna/releases/tag/v3.0.0. Use suggest_float(..., log=True) instead.\n  learning_rate = trial.suggest_loguniform('lr', 1e-2, 1e-0)\n/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n[I 2024-09-01 04:55:23,769] Trial 0 finished with value: 0.959277331829071 and parameters: {'lr': 0.4869498133491354}. Best is trial 0 with value: 0.959277331829071.\n[I 2024-09-01 04:55:54,458] Trial 1 finished with value: 0.9623047113418579 and parameters: {'lr': 0.5485034750628661}. Best is trial 1 with value: 0.9623047113418579.\n[I 2024-09-01 04:56:25,204] Trial 2 finished with value: 0.93603515625 and parameters: {'lr': 0.09833396206168134}. Best is trial 1 with value: 0.9623047113418579.\n[I 2024-09-01 04:56:55,860] Trial 3 finished with value: 0.910351574420929 and parameters: {'lr': 0.024874470385605436}. Best is trial 1 with value: 0.9623047113418579.\n[I 2024-09-01 04:57:27,002] Trial 4 finished with value: 0.9222656488418579 and parameters: {'lr': 0.05367165143646943}. Best is trial 1 with value: 0.9623047113418579.\n[I 2024-09-01 04:57:58,084] Trial 5 finished with value: 0.962695300579071 and parameters: {'lr': 0.6787851113075581}. Best is trial 5 with value: 0.962695300579071.\n[I 2024-09-01 04:58:29,009] Trial 6 finished with value: 0.899121105670929 and parameters: {'lr': 0.016244313572355885}. Best is trial 5 with value: 0.962695300579071.\n[I 2024-09-01 04:58:59,889] Trial 7 finished with value: 0.9598633050918579 and parameters: {'lr': 0.7737000780287556}. Best is trial 5 with value: 0.962695300579071.\n[I 2024-09-01 04:59:30,770] Trial 8 finished with value: 0.9053711295127869 and parameters: {'lr': 0.01788785186564609}. Best is trial 5 with value: 0.962695300579071.\n[I 2024-09-01 05:00:01,609] Trial 9 finished with value: 0.9434570670127869 and parameters: {'lr': 0.12274430518305995}. Best is trial 5 with value: 0.962695300579071.\n","output_type":"stream"},{"name":"stdout","text":"Best hyperparameters: {'lr': 0.6787851113075581}\nBest test accuracy: 0.9627\nTrial number with best test accuracy: 5\n","output_type":"stream"}]},{"cell_type":"code","source":"{'lr': 0.0178878518656460}\n{'lr': 0.09833396206168134}","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"m1 = MnistModel(input_size, hidden_size=hidden_size, out_size=num_classes)\nto_device(m1, device)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T06:05:52.555782Z","iopub.execute_input":"2024-09-01T06:05:52.556681Z","iopub.status.idle":"2024-09-01T06:05:52.565283Z","shell.execute_reply.started":"2024-09-01T06:05:52.556636Z","shell.execute_reply":"2024-09-01T06:05:52.564087Z"},"trusted":true},"execution_count":184,"outputs":[{"execution_count":184,"output_type":"execute_result","data":{"text/plain":"MnistModel(\n  (linear1): Linear(in_features=784, out_features=32, bias=True)\n  (linear2): Linear(in_features=32, out_features=10, bias=True)\n)"},"metadata":{}}]},{"cell_type":"code","source":"m1_history1 = fit(5,0.0178878518656460,m1,train_loader,val_loader) ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T06:06:55.090848Z","iopub.execute_input":"2024-09-01T06:06:55.091309Z","iopub.status.idle":"2024-09-01T06:07:13.159166Z","shell.execute_reply.started":"2024-09-01T06:06:55.091263Z","shell.execute_reply":"2024-09-01T06:07:13.158062Z"},"trusted":true},"execution_count":186,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n","output_type":"stream"},{"name":"stdout","text":"Epoch [0], val_loss: 0.1129, val_acc: 0.9671\nEpoch [1], val_loss: 0.1112, val_acc: 0.9683\nEpoch [2], val_loss: 0.1105, val_acc: 0.9683\nEpoch [3], val_loss: 0.1096, val_acc: 0.9684\nEpoch [4], val_loss: 0.1093, val_acc: 0.9687\n","output_type":"stream"}]},{"cell_type":"code","source":"m1_history2 = fit(5,0.0178878518656460,m1,train_loader,val_loader) ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T06:09:11.162336Z","iopub.execute_input":"2024-09-01T06:09:11.163222Z","iopub.status.idle":"2024-09-01T06:09:29.369822Z","shell.execute_reply.started":"2024-09-01T06:09:11.163178Z","shell.execute_reply":"2024-09-01T06:09:29.368652Z"},"trusted":true},"execution_count":187,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n","output_type":"stream"},{"name":"stdout","text":"Epoch [0], val_loss: 0.1091, val_acc: 0.9683\nEpoch [1], val_loss: 0.1088, val_acc: 0.9684\nEpoch [2], val_loss: 0.1087, val_acc: 0.9688\nEpoch [3], val_loss: 0.1084, val_acc: 0.9684\nEpoch [4], val_loss: 0.1083, val_acc: 0.9689\n","output_type":"stream"}]},{"cell_type":"code","source":"m1_history3 = fit(5,0.0178878518656460,m1,train_loader,val_loader) ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T06:10:01.120043Z","iopub.execute_input":"2024-09-01T06:10:01.120525Z","iopub.status.idle":"2024-09-01T06:10:18.715188Z","shell.execute_reply.started":"2024-09-01T06:10:01.120479Z","shell.execute_reply":"2024-09-01T06:10:18.714045Z"},"trusted":true},"execution_count":188,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n","output_type":"stream"},{"name":"stdout","text":"Epoch [0], val_loss: 0.1081, val_acc: 0.9690\nEpoch [1], val_loss: 0.1078, val_acc: 0.9692\nEpoch [2], val_loss: 0.1078, val_acc: 0.9691\nEpoch [3], val_loss: 0.1077, val_acc: 0.9683\nEpoch [4], val_loss: 0.1075, val_acc: 0.9689\n","output_type":"stream"}]},{"cell_type":"code","source":"m1_history4 = fit(5,0.0178878518656460,m1,train_loader,val_loader) ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T06:11:13.156812Z","iopub.execute_input":"2024-09-01T06:11:13.157218Z","iopub.status.idle":"2024-09-01T06:11:31.315213Z","shell.execute_reply.started":"2024-09-01T06:11:13.157179Z","shell.execute_reply":"2024-09-01T06:11:31.313804Z"},"trusted":true},"execution_count":189,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n","output_type":"stream"},{"name":"stdout","text":"Epoch [0], val_loss: 0.1072, val_acc: 0.9689\nEpoch [1], val_loss: 0.1071, val_acc: 0.9689\nEpoch [2], val_loss: 0.1073, val_acc: 0.9691\nEpoch [3], val_loss: 0.1072, val_acc: 0.9691\nEpoch [4], val_loss: 0.1070, val_acc: 0.9689\n","output_type":"stream"}]},{"cell_type":"code","source":"m2 = MnistModel(input_size, hidden_size=hidden_size, out_size=num_classes)\nto_device(m2, device)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T06:12:06.780344Z","iopub.execute_input":"2024-09-01T06:12:06.780746Z","iopub.status.idle":"2024-09-01T06:12:06.790212Z","shell.execute_reply.started":"2024-09-01T06:12:06.780707Z","shell.execute_reply":"2024-09-01T06:12:06.789131Z"},"trusted":true},"execution_count":190,"outputs":[{"execution_count":190,"output_type":"execute_result","data":{"text/plain":"MnistModel(\n  (linear1): Linear(in_features=784, out_features=32, bias=True)\n  (linear2): Linear(in_features=32, out_features=10, bias=True)\n)"},"metadata":{}}]},{"cell_type":"code","source":"m2_history1 = fit(5,0.09833396206168134,m2,train_loader,val_loader) ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T06:12:37.971402Z","iopub.execute_input":"2024-09-01T06:12:37.971831Z","iopub.status.idle":"2024-09-01T06:12:55.489592Z","shell.execute_reply.started":"2024-09-01T06:12:37.971782Z","shell.execute_reply":"2024-09-01T06:12:55.488374Z"},"trusted":true},"execution_count":191,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n","output_type":"stream"},{"name":"stdout","text":"Epoch [0], val_loss: 0.3531, val_acc: 0.9028\nEpoch [1], val_loss: 0.2943, val_acc: 0.9145\nEpoch [2], val_loss: 0.2727, val_acc: 0.9227\nEpoch [3], val_loss: 0.2348, val_acc: 0.9334\nEpoch [4], val_loss: 0.2231, val_acc: 0.9359\n","output_type":"stream"}]},{"cell_type":"code","source":"m2_history2 = fit(5,0.09833396206168134,m2,train_loader,val_loader)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T06:15:55.855699Z","iopub.execute_input":"2024-09-01T06:15:55.856515Z","iopub.status.idle":"2024-09-01T06:16:14.104537Z","shell.execute_reply.started":"2024-09-01T06:15:55.856470Z","shell.execute_reply":"2024-09-01T06:16:14.103342Z"},"trusted":true},"execution_count":193,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n","output_type":"stream"},{"name":"stdout","text":"Epoch [0], val_loss: 0.1656, val_acc: 0.9515\nEpoch [1], val_loss: 0.1617, val_acc: 0.9529\nEpoch [2], val_loss: 0.1570, val_acc: 0.9563\nEpoch [3], val_loss: 0.1493, val_acc: 0.9573\nEpoch [4], val_loss: 0.1490, val_acc: 0.9558\n","output_type":"stream"}]},{"cell_type":"code","source":"m2_history3 = fit(5,0.09833396206168134,m2,train_loader,val_loader)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T06:16:24.369377Z","iopub.execute_input":"2024-09-01T06:16:24.369808Z","iopub.status.idle":"2024-09-01T06:16:42.454638Z","shell.execute_reply.started":"2024-09-01T06:16:24.369766Z","shell.execute_reply":"2024-09-01T06:16:42.453400Z"},"trusted":true},"execution_count":194,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n","output_type":"stream"},{"name":"stdout","text":"Epoch [0], val_loss: 0.1428, val_acc: 0.9590\nEpoch [1], val_loss: 0.1488, val_acc: 0.9584\nEpoch [2], val_loss: 0.1424, val_acc: 0.9612\nEpoch [3], val_loss: 0.1409, val_acc: 0.9609\nEpoch [4], val_loss: 0.1378, val_acc: 0.9593\n","output_type":"stream"}]},{"cell_type":"code","source":"m2_history4 = fit(5,0.09833396206168134,m2,train_loader,val_loader)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T06:18:50.449369Z","iopub.execute_input":"2024-09-01T06:18:50.449782Z","iopub.status.idle":"2024-09-01T06:19:08.972933Z","shell.execute_reply.started":"2024-09-01T06:18:50.449742Z","shell.execute_reply":"2024-09-01T06:19:08.971723Z"},"trusted":true},"execution_count":195,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n","output_type":"stream"},{"name":"stdout","text":"Epoch [0], val_loss: 0.1342, val_acc: 0.9606\nEpoch [1], val_loss: 0.1324, val_acc: 0.9627\nEpoch [2], val_loss: 0.1395, val_acc: 0.9579\nEpoch [3], val_loss: 0.1308, val_acc: 0.9621\nEpoch [4], val_loss: 0.1383, val_acc: 0.9618\n","output_type":"stream"}]},{"cell_type":"code","source":"m1_history5 = fit(30,0.0178878518656460,m1,train_loader,val_loader) ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T06:19:39.774144Z","iopub.execute_input":"2024-09-01T06:19:39.774570Z","iopub.status.idle":"2024-09-01T06:21:27.662715Z","shell.execute_reply.started":"2024-09-01T06:19:39.774521Z","shell.execute_reply":"2024-09-01T06:21:27.661541Z"},"trusted":true},"execution_count":196,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n","output_type":"stream"},{"name":"stdout","text":"Epoch [0], val_loss: 0.1071, val_acc: 0.9689\nEpoch [1], val_loss: 0.1069, val_acc: 0.9687\nEpoch [2], val_loss: 0.1071, val_acc: 0.9690\nEpoch [3], val_loss: 0.1068, val_acc: 0.9688\nEpoch [4], val_loss: 0.1067, val_acc: 0.9688\nEpoch [5], val_loss: 0.1066, val_acc: 0.9691\nEpoch [6], val_loss: 0.1067, val_acc: 0.9690\nEpoch [7], val_loss: 0.1064, val_acc: 0.9691\nEpoch [8], val_loss: 0.1063, val_acc: 0.9688\nEpoch [9], val_loss: 0.1064, val_acc: 0.9692\nEpoch [10], val_loss: 0.1063, val_acc: 0.9689\nEpoch [11], val_loss: 0.1063, val_acc: 0.9689\nEpoch [12], val_loss: 0.1062, val_acc: 0.9688\nEpoch [13], val_loss: 0.1061, val_acc: 0.9688\nEpoch [14], val_loss: 0.1060, val_acc: 0.9688\nEpoch [15], val_loss: 0.1067, val_acc: 0.9692\nEpoch [16], val_loss: 0.1062, val_acc: 0.9688\nEpoch [17], val_loss: 0.1062, val_acc: 0.9690\nEpoch [18], val_loss: 0.1062, val_acc: 0.9688\nEpoch [19], val_loss: 0.1059, val_acc: 0.9694\nEpoch [20], val_loss: 0.1060, val_acc: 0.9690\nEpoch [21], val_loss: 0.1060, val_acc: 0.9688\nEpoch [22], val_loss: 0.1058, val_acc: 0.9688\nEpoch [23], val_loss: 0.1059, val_acc: 0.9687\nEpoch [24], val_loss: 0.1059, val_acc: 0.9688\nEpoch [25], val_loss: 0.1058, val_acc: 0.9688\nEpoch [26], val_loss: 0.1062, val_acc: 0.9686\nEpoch [27], val_loss: 0.1061, val_acc: 0.9685\nEpoch [28], val_loss: 0.1059, val_acc: 0.9690\nEpoch [29], val_loss: 0.1062, val_acc: 0.9684\n","output_type":"stream"}]},{"cell_type":"code","source":"m2_history5 = fit(30,0.09833396206168134,m2,train_loader,val_loader) ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T06:22:49.663019Z","iopub.execute_input":"2024-09-01T06:22:49.663509Z","iopub.status.idle":"2024-09-01T06:24:36.606438Z","shell.execute_reply.started":"2024-09-01T06:22:49.663465Z","shell.execute_reply":"2024-09-01T06:24:36.605340Z"},"trusted":true},"execution_count":197,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_36/55389227.py:4: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).\n  return torch.tensor(torch.sum(preds == labels)/len(preds))\n","output_type":"stream"},{"name":"stdout","text":"Epoch [0], val_loss: 0.1314, val_acc: 0.9628\nEpoch [1], val_loss: 0.1306, val_acc: 0.9632\nEpoch [2], val_loss: 0.1271, val_acc: 0.9633\nEpoch [3], val_loss: 0.1288, val_acc: 0.9646\nEpoch [4], val_loss: 0.1268, val_acc: 0.9635\nEpoch [5], val_loss: 0.1292, val_acc: 0.9630\nEpoch [6], val_loss: 0.1272, val_acc: 0.9624\nEpoch [7], val_loss: 0.1245, val_acc: 0.9646\nEpoch [8], val_loss: 0.1287, val_acc: 0.9632\nEpoch [9], val_loss: 0.1258, val_acc: 0.9645\nEpoch [10], val_loss: 0.1248, val_acc: 0.9650\nEpoch [11], val_loss: 0.1214, val_acc: 0.9653\nEpoch [12], val_loss: 0.1251, val_acc: 0.9647\nEpoch [13], val_loss: 0.1236, val_acc: 0.9648\nEpoch [14], val_loss: 0.1210, val_acc: 0.9641\nEpoch [15], val_loss: 0.1263, val_acc: 0.9634\nEpoch [16], val_loss: 0.1240, val_acc: 0.9654\nEpoch [17], val_loss: 0.1234, val_acc: 0.9646\nEpoch [18], val_loss: 0.1215, val_acc: 0.9644\nEpoch [19], val_loss: 0.1237, val_acc: 0.9652\nEpoch [20], val_loss: 0.1278, val_acc: 0.9630\nEpoch [21], val_loss: 0.1194, val_acc: 0.9668\nEpoch [22], val_loss: 0.1222, val_acc: 0.9662\nEpoch [23], val_loss: 0.1210, val_acc: 0.9659\nEpoch [24], val_loss: 0.1229, val_acc: 0.9650\nEpoch [25], val_loss: 0.1258, val_acc: 0.9646\nEpoch [26], val_loss: 0.1227, val_acc: 0.9662\nEpoch [27], val_loss: 0.1222, val_acc: 0.9665\nEpoch [28], val_loss: 0.1211, val_acc: 0.9662\nEpoch [29], val_loss: 0.1224, val_acc: 0.9650\n","output_type":"stream"}]},{"cell_type":"code","source":"history = m1_history1 +m1_history2 +m1_history3 +m1_history4 + m1_history5\naccuracies = [result['val_acc'] for result in history]\nplt.plot(accuracies, '-x')\nplt.xlabel('epoch')\nplt.ylabel('accuracy')\nplt.title('Accuracy Compared To # of Epochs')","metadata":{"trusted":true},"execution_count":198,"outputs":[{"execution_count":198,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 1.0, 'Accuracy Compared To # of Epochs')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"history = m2_history1 +m2_history2 +m2_history3 +m2_history4 + m2_history5\naccuracies = [result['val_acc'] for result in history]\nplt.plot(accuracies, '-x')\nplt.xlabel('epoch')\nplt.ylabel('accuracy')\nplt.title('Accuracy Compared To # of Epochs')","metadata":{"execution":{"iopub.status.busy":"2024-09-01T06:26:12.401122Z","iopub.execute_input":"2024-09-01T06:26:12.401569Z","iopub.status.idle":"2024-09-01T06:26:12.705654Z","shell.execute_reply.started":"2024-09-01T06:26:12.401513Z","shell.execute_reply":"2024-09-01T06:26:12.704714Z"},"trusted":true},"execution_count":199,"outputs":[{"execution_count":199,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 1.0, 'Accuracy Compared To # of Epochs')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"Test Set Results ","metadata":{}},{"cell_type":"code","source":"\n    ","metadata":{"execution":{"iopub.status.busy":"2024-09-01T06:37:38.392123Z","iopub.execute_input":"2024-09-01T06:37:38.392524Z","iopub.status.idle":"2024-09-01T06:37:38.406042Z","shell.execute_reply.started":"2024-09-01T06:37:38.392485Z","shell.execute_reply":"2024-09-01T06:37:38.405184Z"},"trusted":true},"execution_count":202,"outputs":[]},{"cell_type":"code","source":"","metadata":{"execution":{"iopub.status.busy":"2024-09-01T06:37:41.057317Z","iopub.execute_input":"2024-09-01T06:37:41.057700Z","iopub.status.idle":"2024-09-01T06:37:44.460161Z","shell.execute_reply.started":"2024-09-01T06:37:41.057661Z","shell.execute_reply":"2024-09-01T06:37:44.458726Z"},"trusted":true},"execution_count":203,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","Cell \u001b[0;32mIn[203], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mtrain_and_evaluate\u001b[49m\u001b[43m(\u001b[49m\u001b[43mm1\u001b[49m\u001b[43m,\u001b[49m\u001b[43mtrain_loader\u001b[49m\u001b[43m,\u001b[49m\u001b[43mtest_loader\u001b[49m\u001b[43m,\u001b[49m\u001b[38;5;241;43m0.0178878518656460\u001b[39;49m\u001b[43m,\u001b[49m\u001b[38;5;241;43m5\u001b[39;49m\u001b[43m)\u001b[49m\n","Cell \u001b[0;32mIn[202], line 36\u001b[0m, in \u001b[0;36mtrain_and_evaluate\u001b[0;34m(model, train_loader, test_loader, learning_rate, num_epochs, device)\u001b[0m\n\u001b[1;32m     33\u001b[0m     total \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m labels\u001b[38;5;241m.\u001b[39msize(\u001b[38;5;241m0\u001b[39m)\n\u001b[1;32m     34\u001b[0m     correct \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m (predicted \u001b[38;5;241m==\u001b[39m labels)\u001b[38;5;241m.\u001b[39msum()\u001b[38;5;241m.\u001b[39mitem()\n\u001b[0;32m---> 36\u001b[0m epoch_loss \u001b[38;5;241m=\u001b[39m running_loss \u001b[38;5;241m/\u001b[39m \u001b[38;5;28mlen\u001b[39m(\u001b[43mtrain_loader\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdataset\u001b[49m)\n\u001b[1;32m     37\u001b[0m epoch_accuracy \u001b[38;5;241m=\u001b[39m correct \u001b[38;5;241m/\u001b[39m total\n\u001b[1;32m     39\u001b[0m \u001b[38;5;66;03m# Print training loss and accuracy\u001b[39;00m\n","\u001b[0;31mAttributeError\u001b[0m: 'DeviceDataLoader' object has no attribute 'dataset'"],"ename":"AttributeError","evalue":"'DeviceDataLoader' object has no attribute 'dataset'","output_type":"error"}]}]}